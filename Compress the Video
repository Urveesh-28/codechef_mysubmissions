Problem
Chef recorded a video explaining his favorite recipe. However, the size of the video is too large to upload on the internet. He wants to compress the video so that it has the minimum size possible.

Chef's video has NN frames initially. The value of the i^{th}i 
th
  frame is A_iA 
i
​
 . Chef can do the following type of operation any number of times:

Choose an index ii (1\le i \le N)(1≤i≤N) such that the value of the i^{th}i 
th
  frame is equal to the value of either of its neighbors and remove the i^{th}i 
th
  frame.
Find the minimum number of frames Chef can achieve.

Input Format
First line will contain TT, the number of test cases. Then the test cases follow.
The first line of each test case contains a single integer NN - the number of frames initially.
The second line contains NN space-separated integers, A_1, A_2, \ldots, A_NA 
1
​
 ,A 
2
​
 ,…,A 
N
​
  - the values of the frames.
Output Format
For each test case, output in a single line the minimum number of frames Chef can achieve.

Constraints
1 \leq T \leq 10001≤T≤1000
1 \leq N \leq 10^51≤N≤10 
5
 
1 \leq A_i \leq 10^61≤A 
i
​
 ≤10 
6
 
Sum of NN over all test cases does not exceed 2\cdot 10^52⋅10 
5
 .
 
 
 #include <stdio.h>
#include<math.h>

int main(void) {
	// your code goes here
	int t;
	scanf("%d",&t);
	while(t--)
	{
	    int frames;
	    scanf("%d",&frames);
	    int video[frames],count=0;
	    for(int i=0;i<frames;i++)
	    {
	        scanf("%d",&video[i]);
	    }
	    
	    for(int i=0;i<frames;i++)
	    {
	        if((video[i]==video[i-1]))
	        {
                count++;	        
	        }
	    }
	   
	    printf("%d\n",frames-count);
	}
	return 0;
}
